{"version":3,"sources":["webpack:///./src/assets/curso/temas/70.png","webpack:///./src/views/Tema6.vue?571d","webpack:///src/views/Tema6.vue","webpack:///./src/views/Tema6.vue?233d","webpack:///./src/views/Tema6.vue"],"names":["module","exports","render","_vm","this","_h","$createElement","_c","_self","staticClass","_m","staticRenderFns","_v","staticStyle","attrs","name","data","mounted","$nextTick","updated","$aosRefresh","component"],"mappings":"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","file":"js/tema6.40f28abd.js","sourcesContent":["module.exports = __webpack_public_path__ + \"img/70.c100b820.png\";","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"curso-main-container pb-3\"},[_c('BannerInterno'),_vm._m(0)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"container tarjeta tarjeta--blanca p-4 p-md-5 mb-5\"},[_c('div',{staticClass:\"titulo-principal color-acento-contenido\"},[_c('div',{staticClass:\"titulo-principal__numero\"},[_c('span',[_vm._v(\"6\")])]),_c('h1',[_vm._v(\"Manipulación de datos con MongoDB \")])]),_c('div',{staticClass:\"f-6-1 mn p-5\"},[_c('div',{staticClass:\"p-5 mb-5\",staticStyle:{\"background-color\":\"#f7eefe\"}},[_c('div',{staticClass:\"row justify-content-center align-items-center\"},[_c('div',{staticClass:\"col-lg-9 mb-lg-0 mb-3\"},[_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Las bases de datos deben poder manipular la información de varias maneras, ya que los procesos en los sistemas informáticos necesitan de esas operaciones básicas: crear datos, consultarlos, actualizarlos y, en algún punto, eliminarlos (\"),_c('em',[_vm._v(\"Create, Read, Update, and Delete\")]),_vm._v(\" - CRUD). Por tanto, queda establecido que almacenarla o contenerla no es su mera y única función básica. \")])]),_c('div',{staticClass:\"col-lg-3 col-7\"},[_c('img',{attrs:{\"src\":require(\"@/assets/curso/temas/70.png\"),\"alt\":\"\"}})])])]),_c('div',{staticClass:\"titulo-tres mb-4\"},[_c('h3',{staticClass:\"mb-0\"},[_vm._v(\"Crear documentos\")])]),_c('p',{staticClass:\"mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"Es la primera de cuatro funciones elementales a la hora de utilizar bases de datos. Crear documentos permite insertar unidades de información; en el caso de MongoDB, a través de documentos en colecciones de datos. \")]),_c('ol',{staticClass:\"lista-ol--cuadro\"},[_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',[_vm._v(\"1\")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Crear un documento: Para poder crear un documento, MongoDB posee los métodos .insert(), .save() y, de una manera especial, .update() \")])])]),_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\"documento = { \"),_c('br'),_vm._v(\" “titulo”: “Titulo Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Peter”, “Johnathan”] \"),_c('br'),_vm._v(\"} \"),_c('br'),_vm._v(\"{ \"),_c('br'),_vm._v(\" “titulo”: “Titulo Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Peter”, “Johnathan”] \"),_c('br'),_vm._v(\"} \"),_c('br'),_vm._v(\"db.libros.insert(documento) \"),_c('br'),_vm._v(\"WriteResult({ “nInserted”: 1 }) \")])])]),_c('ol',{staticClass:\"lista-ol--cuadro\"},[_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',[_vm._v(\"2\")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Insertar varios documentos simultáneamente: Se pueden insertar varios documentos a la vez.\")])])]),_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\"documentos = [{ \"),_c('br'),_vm._v(\" “titulo”: “Otro Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Peter”, “Yolima”] \"),_c('br'),_vm._v(\"}, { \"),_c('br'),_vm._v(\" “titulo”: “Nuevo Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Zulema”] \"),_c('br'),_vm._v(\"}] \"),_c('br'),_vm._v(\"[{ \"),_c('br'),_vm._v(\" “titulo”: “Otro Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Peter”, “Yolima”] \"),_c('br'),_vm._v(\"}, { \"),_c('br'),_vm._v(\" “titulo”: “Nuevo Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Zulema”] \"),_c('br'),_vm._v(\"}] \"),_c('br'),_vm._v(\"db.libros.insert(documentos) = [{ \"),_c('br'),_vm._v(\" BulkWriteResult({ \"),_c('br'),_vm._v(\"   “writeErrors”: [], \"),_c('br'),_vm._v(\"   “writeConcernErrors”: [], \"),_c('br'),_vm._v(\"   “nInserted”: 2, \"),_c('br'),_vm._v(\"   “nUpserted”: 0, \"),_c('br'),_vm._v(\"   “nMatched”: 0, \"),_c('br'),_vm._v(\"   “nModified”: 0, \"),_c('br'),_vm._v(\"   “nRemoved”: 0, \"),_c('br'),_vm._v(\"   “upserted”: [] \"),_c('br'),_vm._v(\" }) \"),_c('br'),_vm._v(\"}] \")])])]),_c('ol',{staticClass:\"lista-ol--cuadro\"},[_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',[_vm._v(\"3 \")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Actualizar un documento: Este método tiene todas las funciones de .insert(), pero además permite actualizar un documento si ya existe el _id de dicho documento. En ese caso, .insert() mostraría una excepción. \")])])]),_c('div',{staticClass:\"titulo-tres my-5\"},[_c('h3',{staticClass:\"mb-0\"},[_vm._v(\"Leer y consultar colecciones \")])]),_c('p',{staticClass:\"mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"Para leer y consultar la información, la forma básica consiste en usar el método find() de la colección, tal como se mencionó anteriormente en este componente formativo.\")]),_c('ol',{staticClass:\"lista-ol--cuadro\"},[_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',[_vm._v(\"A \")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Leer y consultar colecciones \")])])]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-10\"},[_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\"> db.libros.find() \"),_c('br'),_vm._v(\"{ “_id” : ObjectId(“60d159461e0ed70729ced13e”), “titulo” : “Titulo Libro”, “Autores” : [ “Peter”, “Johnathan” ] } \"),_c('br'),_vm._v(\"{ “_id” : ObjectId(“60d159df1e0ed70729ced13f”), “titulo” : “Otro Libro”, “Autores” : [ “Peter”, “Yolima” ] } \"),_c('br'),_vm._v(\"{ “_id” : ObjectId(“60d159df1e0ed70729ced140”), “titulo” : “Nuevo Libro”, “Autores” : [ “Zulema” ] }        \")])])])])]),_c('ol',{staticClass:\"lista-ol--cuadro\"},[_c('li',{staticClass:\"d-flex\"},[_c('div',{staticClass:\"lista-ol--cuadro__vineta\"},[_c('span',[_vm._v(\"B\")])]),_c('p',{staticClass:\"mb-0\"},[_vm._v(\"Función pretty(): otra forma de mejor visualización es aplicar la función pretty(). \")])])]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\"> db.libros.find().pretty() \"),_c('br'),_vm._v(\"{ \"),_c('br'),_vm._v(\" “_id”: ObjectId(“60d159461e0ed70729ced13e”), \"),_c('br'),_vm._v(\" “titulo”: “Titulo Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Peter”, “Johnathan”] \"),_c('br'),_vm._v(\"}, \"),_c('br'),_vm._v(\"{ \"),_c('br'),_vm._v(\" “_id”: ObjectId(“60d159df1e0ed70729ced13f”), \"),_c('br'),_vm._v(\" “titulo”: “Otro Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Peter”, “Yolima”] \"),_c('br'),_vm._v(\"}, \"),_c('br'),_vm._v(\"{ \"),_c('br'),_vm._v(\" “_id”: ObjectId(“60d159df1e0ed70729ced140”), \"),_c('br'),_vm._v(\" “titulo”: “Nuevo Libro”, \"),_c('br'),_vm._v(\" “Autores”: [“Zulema”] \"),_c('br'),_vm._v(\"}         \")])])])])]),_c('div',{staticClass:\"titulo-tres mb-4\"},[_c('h3',{staticClass:\"mb-0\"},[_vm._v(\"Actualizar documentos \")])]),_c('p',{staticClass:\"mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"Es momento de conocer un ejemplo de cómo se actualiza la información en la base de datos, conociendo el contenido del atributo _id del documento a actualizar. Preste atención a la siguiente estructura: \")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\"db.collection.update( \"),_c('br'),_vm._v(\" { consulta - criterios }, \"),_c('br'),_vm._v(\" { documento modificado }, \"),_c('br'),_vm._v(\" { upsert: true | false, multi : true | false } \"),_c('br'),_vm._v(\")        \")])])])])]),_c('p',{staticClass:\"mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"La opción upsert permite agregar un documento si no existe, siempre y cuando esta opción esté activada.\")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\"> db.libros.update({ “_id”: ObjectId(“60d159df1e0ed70729ced13f”) }, { “titulo”: “Titulo Modificado” }) \"),_c('br'),_vm._v(\"WriteResult({ “nMatched”: 1, “nUpserted”: 0, “nModified”: 1 }) \"),_c('br'),_vm._v(\">  \")])])])])]),_c('div',{staticClass:\"titulo-tres mb-4\"},[_c('h3',{staticClass:\"mb-0\"},[_vm._v(\"Borrar documentos\")])]),_c('p',{staticClass:\"mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"El método remove() elimina uno o más documentos de una colección. Recibe parámetros para realizar una eliminación selectiva; si no se le pasa ningún parámetro, elimina todos los documentos de la colección (Graterol, 2014). Esto nos lleva a concluir que las bases de datos no relacionales son más sencillas de administrar, al no tener que hacer uso de estructuras complejas e interrelacionadas. \")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\"> db.libros.remove({ “_id”: ObjectId(“60d159df1e0ed70729ced13f”) }) \"),_c('br'),_vm._v(\"WriteResult({ “nRemoved”: 1 })  \")])])])])]),_c('p',{staticClass:\"mb-5\",attrs:{\"data-aos\":\"fade-right\"}},[_vm._v(\"La función drop() elimina toda una colección y es la más recomendable a la hora de realizar esta tarea, ya que utiliza menos recursos que remove() (Yohan D, 2014). \")]),_c('div',{staticClass:\"row justify-content-center mb-5\"},[_c('div',{staticClass:\"col-lg-6\"},[_c('div',{staticClass:\"tarjeta-codigo p-5 mb-5\"},[_c('pre',{staticClass:\"language-html mt-5\",attrs:{\"language\":\"html\"}},[_c('code',[_vm._v(\" < db.libros.drop(); \"),_c('br'),_vm._v(\"true \"),_c('br'),_vm._v(\"< show collections \"),_c('br'),_vm._v(\"coleccion_personas \"),_c('br'),_vm._v(\"< \")])])])])])])])}]\n\nexport { render, staticRenderFns }","<template lang=\"pug\">\n.curso-main-container.pb-3\n  BannerInterno\n  .container.tarjeta.tarjeta--blanca.p-4.p-md-5.mb-5\n    .titulo-principal.color-acento-contenido\n      .titulo-principal__numero\n        span 6\n      h1 Manipulación de datos con MongoDB \n    .f-6-1.mn.p-5\n      .p-5(style=\"background-color: #f7eefe\").mb-5\n        .row.justify-content-center.align-items-center\n          .col-lg-9.mb-lg-0.mb-3\n            p.mb-0 Las bases de datos deben poder manipular la información de varias maneras, ya que los procesos en los sistemas informáticos necesitan de esas operaciones básicas: crear datos, consultarlos, actualizarlos y, en algún punto, eliminarlos (#[em Create, Read, Update, and Delete] - CRUD). Por tanto, queda establecido que almacenarla o contenerla no es su mera y única función básica. \n          .col-lg-3.col-7: img(src='@/assets/curso/temas/70.png', alt='') \n      .titulo-tres.mb-4: h3.mb-0 Crear documentos\n      p.mb-5(data-aos='fade-right') Es la primera de cuatro funciones elementales a la hora de utilizar bases de datos. Crear documentos permite insertar unidades de información; en el caso de MongoDB, a través de documentos en colecciones de datos.  \n      ol.lista-ol--cuadro\n        li.d-flex\n          .lista-ol--cuadro__vineta\n            span 1\n          p.mb-0 Crear un documento: Para poder crear un documento, MongoDB posee los métodos .insert(), .save() y, de una manera especial, .update()   \n      .tarjeta-codigo.p-5.mb-5\n        pre.language-html(language=\"html\").mt-5\n          code documento = { \n            br\n            |  “titulo”: “Titulo Libro”, \n            br\n            |  “Autores”: [“Peter”, “Johnathan”] \n            br\n            |} \n            br\n            |{ \n            br\n            |  “titulo”: “Titulo Libro”, \n            br\n            |  “Autores”: [“Peter”, “Johnathan”] \n            br\n            |} \n            br\n            |db.libros.insert(documento) \n            br\n            |WriteResult({ “nInserted”: 1 }) \n      ol.lista-ol--cuadro\n        li.d-flex\n          .lista-ol--cuadro__vineta\n            span 2\n          p.mb-0 Insertar varios documentos simultáneamente: Se pueden insertar varios documentos a la vez.\n      .tarjeta-codigo.p-5.mb-5\n        pre.language-html(language=\"html\").mt-5\n          code documentos = [{ \n            br\n            |  “titulo”: “Otro Libro”, \n            br\n            |  “Autores”: [“Peter”, “Yolima”] \n            br\n            |}, { \n            br\n            |  “titulo”: “Nuevo Libro”, \n            br\n            |  “Autores”: [“Zulema”] \n            br\n            |}] \n            br\n            |[{ \n            br\n            |  “titulo”: “Otro Libro”, \n            br\n            |  “Autores”: [“Peter”, “Yolima”] \n            br\n            |}, { \n            br\n            |  “titulo”: “Nuevo Libro”, \n            br\n            |  “Autores”: [“Zulema”] \n            br\n            |}] \n            br\n            |db.libros.insert(documentos) = [{ \n            br\n            |  BulkWriteResult({ \n            br\n            |    “writeErrors”: [], \n            br\n            |    “writeConcernErrors”: [], \n            br\n            |    “nInserted”: 2, \n            br\n            |    “nUpserted”: 0, \n            br\n            |    “nMatched”: 0, \n            br\n            |    “nModified”: 0, \n            br\n            |    “nRemoved”: 0, \n            br\n            |    “upserted”: [] \n            br\n            |  }) \n            br\n            |}] \n      ol.lista-ol--cuadro\n        li.d-flex\n          .lista-ol--cuadro__vineta\n            span 3 \n          p.mb-0 Actualizar un documento: Este método tiene todas las funciones de .insert(), pero además permite actualizar un documento si ya existe el _id de dicho documento. En ese caso, .insert() mostraría una excepción. \n      \n      .titulo-tres.my-5: h3.mb-0 Leer y consultar colecciones \n      \n      p.mb-5(data-aos='fade-right') Para leer y consultar la información, la forma básica consiste en usar el método find() de la colección, tal como se mencionó anteriormente en este componente formativo.\n      ol.lista-ol--cuadro\n        li.d-flex\n          .lista-ol--cuadro__vineta\n            span A \n          p.mb-0 Leer y consultar colecciones \n      .row.justify-content-center.mb-5\n        .col-lg-10\n          .tarjeta-codigo.p-5.mb-5\n            pre.language-html(language=\"html\").mt-5\n              code > db.libros.find() \n                br\n                |{ “_id” : ObjectId(“60d159461e0ed70729ced13e”), “titulo” : “Titulo Libro”, “Autores” : [ “Peter”, “Johnathan” ] } \n                br\n                |{ “_id” : ObjectId(“60d159df1e0ed70729ced13f”), “titulo” : “Otro Libro”, “Autores” : [ “Peter”, “Yolima” ] } \n                br\n                |{ “_id” : ObjectId(“60d159df1e0ed70729ced140”), “titulo” : “Nuevo Libro”, “Autores” : [ “Zulema” ] }        \n      ol.lista-ol--cuadro\n        li.d-flex\n          .lista-ol--cuadro__vineta\n            span B\n          p.mb-0 Función pretty(): otra forma de mejor visualización es aplicar la función pretty().  \n      .row.justify-content-center.mb-5\n        .col-lg-6\n          .tarjeta-codigo.p-5.mb-5\n            pre.language-html(language=\"html\").mt-5\n              code > db.libros.find().pretty() \n                br\n                |{ \n                br\n                |  “_id”: ObjectId(“60d159461e0ed70729ced13e”), \n                br\n                |  “titulo”: “Titulo Libro”, \n                br\n                |  “Autores”: [“Peter”, “Johnathan”] \n                br\n                |}, \n                br\n                |{ \n                br\n                |  “_id”: ObjectId(“60d159df1e0ed70729ced13f”), \n                br\n                |  “titulo”: “Otro Libro”, \n                br\n                |  “Autores”: [“Peter”, “Yolima”] \n                br\n                |}, \n                br\n                |{ \n                br\n                |  “_id”: ObjectId(“60d159df1e0ed70729ced140”), \n                br\n                |  “titulo”: “Nuevo Libro”, \n                br\n                |  “Autores”: [“Zulema”] \n                br\n                |}         \n      .titulo-tres.mb-4: h3.mb-0 Actualizar documentos  \n      p.mb-5(data-aos='fade-right') Es momento de conocer  un ejemplo de cómo se actualiza la información en la base de datos, conociendo el contenido del atributo _id del documento a actualizar. Preste atención a la siguiente estructura: \n      .row.justify-content-center.mb-5\n        .col-lg-6\n          .tarjeta-codigo.p-5.mb-5\n            pre.language-html(language=\"html\").mt-5\n              code db.collection.update( \n                br\n                |  { consulta - criterios }, \n                br\n                |  { documento modificado }, \n                br\n                |  { upsert: true | false, multi : true | false } \n                br\n                |)        \n      p.mb-5(data-aos='fade-right') La opción upsert permite agregar un documento si no existe, siempre y cuando esta opción esté activada.\n      .row.justify-content-center.mb-5\n        .col-lg-6\n          .tarjeta-codigo.p-5.mb-5\n            pre.language-html(language=\"html\").mt-5\n              code &gt; db.libros.update({ “_id”: ObjectId(“60d159df1e0ed70729ced13f”) }, { “titulo”: “Titulo Modificado” }) \n                br\n                |WriteResult({ “nMatched”: 1, “nUpserted”: 0, “nModified”: 1 }) \n                br\n                |&gt;  \n      .titulo-tres.mb-4: h3.mb-0 Borrar documentos\n      p.mb-5(data-aos='fade-right') El método remove() elimina uno o más documentos de una colección. Recibe parámetros para realizar una eliminación selectiva; si no se le pasa ningún parámetro, elimina todos los documentos de la colección (Graterol, 2014). Esto nos lleva a concluir que las bases de datos no relacionales son más sencillas de administrar, al no tener que hacer uso de estructuras complejas e interrelacionadas.       \n      .row.justify-content-center.mb-5\n        .col-lg-6\n          .tarjeta-codigo.p-5.mb-5\n            pre.language-html(language=\"html\").mt-5\n              code &gt; db.libros.remove({ “_id”: ObjectId(“60d159df1e0ed70729ced13f”) }) \n                br\n                |WriteResult({ “nRemoved”: 1 })  \n      p.mb-5(data-aos='fade-right') La función drop() elimina toda una colección y es la más recomendable a la hora de realizar esta tarea, ya que utiliza menos recursos que remove() (Yohan D, 2014). \n      .row.justify-content-center.mb-5\n        .col-lg-6\n          .tarjeta-codigo.p-5.mb-5\n            pre.language-html(language=\"html\").mt-5\n              code  &lt; db.libros.drop(); \n                br\n                |true \n                br\n                |&lt; show collections \n                br\n                |coleccion_personas \n                br\n                |&lt; \n\n\n\n\n\n\n\n\n\n\n\n\n\n</template>\n\n<script>\nexport default {\n  name: 'Tema6',\n  data: () => ({\n    // variables de vue\n  }),\n  mounted() {\n    this.$nextTick(() => {\n      this.$aosRefresh()\n    })\n  },\n  updated() {\n    this.$aosRefresh()\n  },\n}\n</script>\n\n<style lang=\"sass\"></style>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema6.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--11-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Tema6.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Tema6.vue?vue&type=template&id=a41991ca&lang=pug&\"\nimport script from \"./Tema6.vue?vue&type=script&lang=js&\"\nexport * from \"./Tema6.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}